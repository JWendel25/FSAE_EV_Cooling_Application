import numpy as np

class Accumulator():
    
    def _init_(self, Internal_Resistance, Num_Cells):
        self.R_int = Internal_Resistance
        self.Num_Cell = Num_Cells
        self.I_max = None
        self.Q_dot_gen = None
        self.FoS = None
    
    def Current_Max(self, Current_Data):                                                # Returns Maximum Average Current [A] experienced by a cell (See Section #.#.# in "User Doc")
        current = np.array(Current_Data)
        self.I_max = np.sum(current) / np.count(current)
        return self.I_max
    
    def Heat_Gen(self, Factor_of_Safety):                                               # Returns total Heat [W] generated by the accumulator w/ a Factor of Safety [-]
        if Factor_of_Safety != None : self.FoS = Factor_of_Safety
        else : self.FoS = 1                                                             # Effectively removes Factor of Safety from calcualtion if none is given
        self.Q_dot_gen = (self.I_max ** 2) * self.R_int * self.Num_Cell * self.FoS
        return self.Q_dot_gen